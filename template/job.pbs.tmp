
#cd $PBS_O_WORKDIR #uncomment this if not using superscript

simName=`pwd`
simName=${simName##*/}
logfile="log.$simName"

#/nopt/nrel/admin/bin/lmutil lmstat -c 1999@wind-lic.nrel.gov -a
#module load star-ccm/9.04.011
star=/home/equon/STAR-CCM+10.04.011-R8/star/bin/starccm+

if [ -z "$nprocs" ]; then
    # this job was run as a standalone, use all available cores
    nodes=$PBS_NUM_NODES
    cores=$PBS_NUM_PPN
    nprocs=$(($nodes*$cores))

    cat $PBS_NODEFILE | sort > $PBS_O_WORKDIR/nodelist
    nodefile="$PBS_O_WORKDIR/nodelist"
fi


# 
# Run Job
# 
#echo "$simName: Started job in `pwd` at `date`"
echo "$simName: Started job in `pwd` at `date`"
#echo "$simName: Running $star with $nprocs procs - `cat nodelist | tr '\n' ' '`"
echo "$simName: Running $star with $nprocs procs from $nodefile"
t0=`date "+%s"`
if [ -s "$logfile" ] && [ -z "`grep Terminated $logfile`" ]; then
    # restart
    date >> RUNNING
    echo "jobid: $PBS_JOBID" >> RUNNING
    $star -rsh "ssh -oStrictHostKeyChecking=no" -machinefile $nodefile -np $nprocs \
        -batch ${simName}.sim >> $logfile
else 
    #clean start
    date > RUNNING
    echo "jobid: $PBS_JOBID" >> RUNNING
    $star -rsh "ssh -oStrictHostKeyChecking=no" -machinefile $nodefile -np $nprocs \
        -batch setupSim.java ${simName}.sim > $logfile
fi
t1=`date "+%s"`
echo $((t1-t0)) > walltime
echo "$simName: Job in `pwd` finished at `date`"

endStr=`tail $logfile | grep "Stopping criterion Maximum Physical Time satisfied."`
if [ -n "$endStr" ]; then 
    mv RUNNING DONE
fi
